@model Location
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<User> l

@{
    ViewData["Title"] = @l["edit_location"];
    ViewData["Active"] = "Home";
}

<h1>@ViewData["Title"]</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="table-wrapper">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

       <div class="form-field table-item">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>

        <div class="form-field table-item">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "form-label" })
            @Html.TextBoxFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    
        <div class="form-field table-item">
            @Html.LabelFor(model => model.isPlaceToGetFood, htmlAttributes: new { @class = "form-checkbox-label " })
            @Html.CheckBoxFor(model=> model.isPlaceToGetFood, "")
            @Html.ValidationMessageFor(model => model.isPlaceToGetFood, "", new { @class = "text-danger" })
        </div>

        <div class="form-field table-item">
            @Html.LabelFor(model => model.isPlaceToEat, htmlAttributes: new { @class = "form-checkbox-label" })
            @Html.CheckBoxFor(model => model.isPlaceToEat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.isPlaceToEat, "", new { @class = "text-danger" })
        </div>

        <div class="additional-lunchtime-info-wrapper">
            <details>

                <summary>@l["more_lunchtime_infos"]</summary>

                <div class="table-wrapper">
                    <div class="form-field table-item">
                        @Html.LabelFor(model => model.diet, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.diet, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.diet, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        @Html.LabelFor(model => model.dish, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.dish, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dish, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        @Html.LabelFor(model => model.amenity, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.amenity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.amenity, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        @Html.LabelFor(model => model.cuisine, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.cuisine, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cuisine, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        @Html.LabelFor(model => model.latitude, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.latitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        @Html.LabelFor(model => model.longditude, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.longditude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.longditude, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="form-field table-item">
                        @Html.LabelFor(model => model.website_adress, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.website_adress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.website_adress, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        @Html.LabelFor(model => model.address_number, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.address_number, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address_number, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="form-field table-item">
                        @Html.LabelFor(model => model.address_street, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.address_street, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address_street, "", new { @class = "text-danger" })
                    </div>
                </div>
            </details>
        </div>
    </div>
        
    <div class="form-field submit-button">
        <input type="submit" value=@l["save"] class="btn btn-default" />
    </div>
}

<div>
    @Html.ActionLink(@l["back_to_list"], "LocationIndex")
</div>