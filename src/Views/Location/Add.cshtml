@model Location;

@{
    ViewData["Title"] = "Add Location";
    ViewData["Active"] = "Home";
}

<h1>@ViewData["Title"]</h1>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-field">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>

        <div class="form-field">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "form-label" })
            @Html.TextBoxFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>

        <div class="form-field">
            @Html.LabelFor(model => model.isPlaceToGetFood, htmlAttributes: new { @class = "form-label " })
            @Html.CheckBoxFor(model=> model.isPlaceToGetFood, "")
            @Html.ValidationMessageFor(model => model.isPlaceToGetFood, "", new { @class = "text-danger" })
        </div>

        <div class="form-field">
            @Html.LabelFor(model => model.isPlaceToEat, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.isPlaceToEat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.isPlaceToEat, "", new { @class = "text-danger" })
        </div>

        <div class="form-field">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "LocationIndex")
</div>