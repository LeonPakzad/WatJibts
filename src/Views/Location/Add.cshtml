@model Location;
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<Localizer> l

@{
    ViewData["Title"] = @l["add location"];
    ViewData["Active"] = "Home";
}

<h1>@ViewData["Title"]</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="table-wrapper">
        <div class="form-field table-item">
            <label class="form-label">@l["name"]</label>
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>

        <div class="form-field table-item">
            <label class="form-label"> @l["description"]</label>
            @Html.TextBoxFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="table-wrapper">
        <div class="form-field table-item">
            <label class="form-label">@l["place for food"]</label>
            @Html.CheckBoxFor(model=> model.isPlaceToGetFood, "")
            @Html.ValidationMessageFor(model => model.isPlaceToGetFood, "", new { @class = "text-danger" })
        </div>

        <div class="form-field table-item">
            <label class="form-label">@l["place to eat"]</label>
            @Html.EditorFor(model => model.isPlaceToEat, "")
            @Html.ValidationMessageFor(model => model.isPlaceToEat, "", new { @class = "text-danger" })
        </div>

        <div class="additional-lunchtime-info-wrapper">
            <details>
                <summary>@l["more infos"]</summary>

                <div class="table-wrapper">
                    <div class="form-field table-item">
                        <label class="form-label">@l["diet"]</label>
                        @Html.TextBoxFor(model => model.diet, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.diet, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        <label class="form-label">@l["dish"]</label>
                        @Html.TextBoxFor(model => model.dish, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dish, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        <label class="form-label">@l["amenity"]</label>
                        @Html.TextBoxFor(model => model.amenity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.amenity, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        <label class="form-label">@l["cuisine"]</label>
                        @Html.TextBoxFor(model => model.cuisine, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cuisine, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        <label class="form-label">@l["latitude"]</label>
                        @Html.EditorFor(model => model.latitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        <label class="form-label">@l["longditude"]</label>
                        @Html.EditorFor(model => model.longditude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.longditude, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="form-field table-item">
                        <label class="form-label">@l["website adress"]</label>
                        @Html.TextBoxFor(model => model.website_adress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.website_adress, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-field table-item">
                        <label class="form-label">@l["adress number"]</label>
                        @Html.TextBoxFor(model => model.address_number, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address_number, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="form-field table-item">
                        <label class="form-label">@l["adress street"]</label>
                        @Html.TextBoxFor(model => model.address_street, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address_street, "", new { @class = "text-danger" })
                    </div>
                </div>
            </details>
        </div>
    </div>

    <div class="form-field submit-button">
        <input type="submit" value=@l["submit"] class="btn btn-default" />
    </div>
}

<div>
    @Html.ActionLink(@l["back to list"], "LocationIndex")
</div>