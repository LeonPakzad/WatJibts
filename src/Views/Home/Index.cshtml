@model IndexModel
@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<h1>Wilkommen zu WatJibts!</h1>

<hr>
<br>

@if (!SignInManager.IsSignedIn(User))
{
    <p>
        Hier können Sie zusammen mit Freunden oder ihrem Team unterschiedliche arten von Essen organisieren.
    </p>

    <h2>Es scheint so als wären sie noch nicht angemeldet.</h2>
}
else
{
    @if(Model.publicLunchSessions.Count() > 0) 
    {
        <div class="lunchtime-wrapper">
        @foreach(var lunchSession in Model.publicLunchSessions)
        {
            if(lunchSession.fk_user != null)
            {
                <div class="lunchtime-card">
                    <div class="lunchtime-users">
                        @lunchSession.fk_user
                    </div>

                    <div class="lunchtime-time">
                        @lunchSession.lunchTime.ToString("hh:mm")
                    </div>

                    <div class="lunchtime-places">
                        @if(@lunchSession.fk_foodPlace == -1)
                        {
                        }
                        else{
                            <span>holt essen von:</span>
                            @lunchSession.fk_foodPlace
                        }

                        @if(@lunchSession.fk_eatingPlace == -1)
                        {
                            
                        }
                        else{
                            <span>isst bei: </span>
                            @lunchSession.fk_eatingPlace
                        }
                    </div>

                    @if(@lunchSession.fk_user.Contains(User.Identity.Name))
                    {
                        <span>Das Jibts!</span>
                    }
                    else
                    {
                        <div class="lunchtime-join">
                            @Html.ActionLink("Anschließen", "JoinSession", new {lunchSessionId = lunchSession.Id})
                        </div>
                    }  
                </div>
            }
        }
        </div>
    }

    @if (Model.privateLunchSessions.Count() > 0)
    {
        <h2>Folgende Menschen essen heute nicht oder privat:</h2>
        @foreach(var lunchSession in Model.privateLunchSessions)
        {
            <div class="table-item">
                @lunchSession.fk_user
                <span>, </span> 
            </div>
        }
    }
    
    @if(Model.publicLunchSessions.Count() < 1 && Model.privateLunchSessions.Count() < 1)
    {
        <p>Heute wurde noch keine Session hinzugefügt</p>
    }

    <br><hr>

    <div class="lunchtime-form">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            
            <div class="form-field participating-wrapper">
                <label class="form-label">Participating</label>
                @Html.CheckBox("participating", false)
            
                <div class="lunchtime-details">
                    <div class="form-horizontal">
                        <div class="form-field-section">
                            <div class="form-field">
                                <label class="form-label">Place to Eat</label>
                                <select class="form-select" name="fk_eatingPlace" asp-for="LunchSession.fk_eatingPlace" asp-items="@(new SelectList(ViewBag.LocationsToEat, "Id", "name"))">
                                    <option value="-1">kein Ort</option>
                                </select>
                            </div>

                            <div class="form-field">
                                <label class="form-label">Place for Food</label>
                                <select class="form-select" name="fk_foodPlace" asp-for="LunchSession.fk_foodPlace" asp-items="@(new SelectList(ViewBag.LocationsToGetFood, "Id", "name"))">
                                        <option value="-1">keine Angabe</option>
                                </select>
                            </div>

                            <a id="add-location" href="../Location/Add">Neuer Ort</a>
                        </div>

                        <div class="form-field-section">
                            <div class="form-field"> 
                                <div class="time-container">
                                    <div class="form-field">
                                        @* @Html.LabelFor(model => model.LunchSession.lunchTime, htmlAttributes: new { @class = "form-label " })
                                        @Html.EditorFor(model => model.LunchSession.lunchTime, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LunchSession.lunchTime, "", new { @class = "text-danger" }) *@
                                        @* @Html.EditorFor(model => model.LunchSession.lunchTime, new { htmlAttributes = new { @class = "form-control", @min = "00:01", @max = "23:59",  } }) *@

                                        <label class="form-label">LunchTime</label>
                                        <input type="datetime" id="lunchTime" name="lunchTime" min="00:01" max="23:59" value="@Model.LunchSession.lunchTime"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <button type="submit" class="">Submit</button>
        }
    </div>
}

@Html.ActionLink("clear todays lunch sessions","clearTodaysLunchSessions")